{"version":3,"sources":["services/personService.js","index.js"],"names":["baseUrl","personService","axios","get","then","response","data","newObject","post","id","put","concat","delete","Notification","_ref","message","color","notificationStyle","react_default","a","createElement","style","className","Filter","props","value","onChange","Person","person","name","number","onClick","handleClick","Persons","personsToRender","namelist","filter","toLowerCase","includes","map","src_Person","key","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","notificationColor","setNotificationColor","useEffect","initialPersons","src_Notification","src_Filter","event","target","src_PersonForm","preventDefault","isFound","find","personObject","window","confirm","returnedPerson","setTimeout","catch","error","src_Persons","returnedNote","console","log","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.de4d2dcb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport personService from './services/personService'\nimport ReactDOM from 'react-dom'\nimport './index.css';\n\nconst Notification = ({ message, color }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificationStyle = {\n    color: color\n  }\n\n  return (\n    <div style={notificationStyle} className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n\n  return (\n    <div>filter shown with<input \n    value={props.value}\n    onChange={props.onChange}\n      />\n    </div>      \n  )\n}\n\nconst Person = (props) => {\n\n  return (\n    <div>\n      <p>{props.person.name} {props.person.number}<button onClick={props.handleClick}>delete</button></p>\n    </div>\n\n  )\n}\n\nconst Persons = (props) => {\n\n  const filteredList = props.namelist.filter((person) => person.name.toLowerCase().includes(props.filter.toLowerCase()))\n  const personsToRender = filteredList.map((person) => <Person key={person.name} person={person} handleClick={() => props.handleClick(person.id, person.name)} />)\n \n  return (\n    <div>\n    {personsToRender}\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n\n  return (\n    <div>\n    <form onSubmit={props.addPerson}>\n    <div>\n      name: <input \n        value={props.newName}\n        onChange={props.handleNameChange}\n      />\n    </div>\n    <div>\n      number: <input \n      value={props.newNumber}\n      onChange={props.handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('') \n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationColor, setNotificationColor] = useState('orange')\n\n\n  const handleClick = (id, name) => {\n    if (window.confirm('Delete ' + name + '?')) {\n      personService\n      .deletePerson(id)\n        .then(returnedNote => {\n          console.log('deleted ', id, name)\n          setPersons(persons.filter(person => person.id !== id))\n          setNotificationColor('green')\n          setNotificationMessage(\n            `Deleted ${name}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n      })\n    }\n  }\n\n  useEffect(() => {\n    personService\n    .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const isFound = persons.find((person) => person.name.toLowerCase() === newName.toLowerCase())\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (!isFound) {\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNotificationColor('green')\n        setNotificationMessage(\n          `Added ${returnedPerson.name}`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n        })\n        .catch(error => {\n          setNotificationColor('red')\n          setNotificationMessage(\n            `${error.response.data.error}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    } else {\n      if (window.confirm(`${newName} on jo osoitekirjassa, korvataanko vanha numero uudella?`)) {\n        personService\n        .update(isFound.id, personObject)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== isFound.id ? person : returnedPerson))\n          setNotificationColor('green')\n          setNotificationMessage(\n            `Updated phone number of ${returnedPerson.name} to ${personObject.number}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setPersons(persons.filter(person => person.id !== isFound.id))\n          setNotificationColor('red')\n          setNotificationMessage(\n            `Information of ${isFound.name} has already been removed from server`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n      }\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification color={notificationColor} message={notificationMessage}/>\n      <Filter value={filter} onChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons namelist={persons} filter={filter} handleClick={handleClick} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nexport default App"],"sourceRoot":""}